[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dnstrace"
version = "0.1.0"
description = "DnsTrace is a tool that identifies DNS queries made by processes on the host."
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["dns", "ebpf", "bpf", "trace", "monitoring", "networking"]
authors = [
    {name = "Furkan Onder", email = "furkanonder@protonmail.com"}
]
maintainers = [
    {name = "Furkan Onder", email = "furkanonder@protonmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: Name Service (DNS)",
    "Typing :: Typed",
]
dependencies = [
    "dnslib>=0.9.26",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "ruff>=0.13.2",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
]
test = [
    "pytest>=8.4.2",
]
all = [
    "pytest>=8.4.2",
    "ruff>=0.13.2",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
]

[project.urls]
Homepage = "https://github.com/furkanonder/dnstrace"
Documentation = "https://github.com/furkanonder/dnstrace#readme"
Repository = "https://github.com/furkanonder/dnstrace.git"
"Bug Tracker" = "https://github.com/furkanonder/dnstrace/issues"
Changelog = "https://github.com/furkanonder/dnstrace/blob/main/CHANGELOG.md"

[project.scripts]
dnstrace = "dnstrace.__main__:main"

[tool.setuptools]
zip-safe = false
include-package-data = true
packages = ["dnstrace"]

[tool.docformatter]
recursive = true
wrap-summaries = 119
wrap-descriptions = 119
blank = true
make-summary-multi-line = false
close-quotes-on-newline = true

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
no_implicit_optional = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_reexport = true
strict_optional = true
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true
explicit_package_bases = true
namespace_packages = true

# Ignore type checking for test files
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.ruff]
line-length = 119
unsafe-fixes = false

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "UP",    # pyupgrade
    "I",     # isort
    "N",     # pep8-naming
    "YTT",   # flake8-2020
    "BLE",   # flake8-blind-except
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "PL",    # pylint
    "FLY",   # flynt
    "PERF",  # Perflint
    "RUF",   # Ruff-specific rules
]
ignore = [
    "T201",    # print found
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["dnstrace"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
